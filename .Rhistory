# Calculate probability
#
calculateProbability <- function(distribution, thresholding) {
sum(distribution <= thresholding) / length(distribution)
}
calculateProbability(distribution, 1)
calculateProbability(distribution, 2)
#
# Main program
#
distribution <- buildDistribution(2, 100000)
calculateProbability(distribution, 0.43)
hist(distribution)
#
# Main program
#
distribution <- buildDistribution(4, 100000)
calculateProbability(distribution, 0.43)
hist(distribution)
# ======================================================================
#
# Calculates the probability distribution of the distance between two
# unitary vectors in an N-dimensional space.
#
# Calculates the probability of this distance being under a given
# thresholding values.
#
# ======================================================================
#
# Creates a random unitary vector
#
createRandomUnitaryVector <- function(dimensions) {
v <- runif(dimensions, min=-2.5, max=2.5)
norm <- sqrt(sum(v^2))
v / norm
}
#
# Calculates the distance of two random unitary vectors
#
calculateDistance <- function(dimensions) {
v1 <- createRandomUnitaryVector(dimensions)
v2 <- createRandomUnitaryVector(dimensions)
sqrt(sum((v1 - v2) ^ 2))
}
#
# Builds a distribution for the distance of two random unitary vectors
#
buildDistribution <- function(dimensions, count) {
results <- c()
for (i in 1:count) {
results <- c(results, calculateDistance(dimensions))
}
results
}
#
# Calculate probability
#
calculateProbability <- function(distribution, thresholding) {
sum(distribution <= thresholding) / length(distribution)
}
#
# Main program
#
distribution <- buildDistribution(4, 100000)
calculateProbability(distribution, 0.43)
hist(distribution)
install.packages(c("finalfit", "kableExtra"))
cat("\014")
rm(list = ls());
library(tidyverse);
library(ggplot2);
library(gridExtra);
library(finalfit);
library(kableExtra);
setwd("/Users/User/Desktop/Codigos/pattern-matching/scripts")
#
# Configuracao
#
baseDirectory <- "data/";
#
# Carga dos dados
#
experiencia <- c("Menos que 1 ano" = "< 1 ano",
"Mais que 1 ano e menor que 3 anos" = "1-3 anos",
"Mais que 3 anos e menor que 5 anos" = "3-5 anos",
"Mais que 5 anos" = "5+ anos")
correcao <- read_delim(paste0(baseDirectory, "correcao-questionarios.csv"), delim=";") %>%
mutate(ExpProg = recode(ExpProg, !!!experiencia)) %>%
mutate(ExpNET = recode(ExpNET, !!!experiencia)) %>%
gather(Questao, Acerto, -Participante, -ExpNET, -ExpProg, -Form);
setwd("/Users/User/Desktop/Codigos/pattern-matching")
correcao <- read_delim(paste0(baseDirectory, "correcao-questionarios.csv"), delim=";") %>%
mutate(ExpProg = recode(ExpProg, !!!experiencia)) %>%
mutate(ExpNET = recode(ExpNET, !!!experiencia)) %>%
gather(Questao, Acerto, -Participante, -ExpNET, -ExpProg, -Form);
composicao <- read_delim(paste0(baseDirectory, "composicao-questionarios.csv"), delim=";") %>%
gather(Questao, Tipo, -Form);
correcaoColSpec <- cols(
Form = col_character(),
Q1 = col_character(),
Q2 = col_character(),
Q3 = col_character(),
Q4 = col_character(),
Q5 = col_character(),
Q6 = col_character(),
Q7 = col_character(),
Q8 = col_character()
)
correcao <- read_delim(paste0(baseDirectory, "correcao-questionarios.csv"), delim=";", col_types=correcaoColSpec) %>%
mutate(ExpProg = recode(ExpProg, !!!experiencia)) %>%
mutate(ExpNET = recode(ExpNET, !!!experiencia)) %>%
gather(Questao, Acerto, -Participante, -ExpNET, -ExpProg, -Form);
composicao <- read_delim(paste0(baseDirectory, "composicao-questionarios.csv"), delim=";") %>%
gather(Questao, Tipo, -Form);
correcaoColSpec <- cols(
Participante = col_character(),
ExpProg = col_character(),
ExpNET = col_character(),
Form = col_character(),
Q1 = col_double(),
Q2 = col_double(),
Q3 = col_double(),
Q4 = col_double(),
Q5 = col_double(),
Q6 = col_double(),
Q7 = col_double(),
Q8 = col_double()
)
correcao <- read_delim(paste0(baseDirectory, "correcao-questionarios.csv"), delim=";", col_types=correcaoColSpec) %>%
mutate(ExpProg = recode(ExpProg, !!!experiencia)) %>%
mutate(ExpNET = recode(ExpNET, !!!experiencia)) %>%
gather(Questao, Acerto, -Participante, -ExpNET, -ExpProg, -Form);
cat("\014")
rm(list = ls());
library(tidyverse);
library(ggplot2);
library(gridExtra);
library(finalfit);
library(kableExtra);
setwd("/Users/User/Desktop/Codigos/pattern-matching")
#setwd("~/Mestrado/tese/pattern-matching")
#
# Configuracao
#
baseDirectory <- "data/";
# ============================================================
#
# CARGA DOS DADOS
#
# ============================================================
#
# Carga das correcoes
#
correcaoColSpec <- cols(
Participante = col_character(),
ExpProg = col_character(),
ExpNET = col_character(),
Form = col_character(),
Q1 = col_double(),
Q2 = col_double(),
Q3 = col_double(),
Q4 = col_double(),
Q5 = col_double(),
Q6 = col_double(),
Q7 = col_double(),
Q8 = col_double()
)
correcao <- read_delim(paste0(baseDirectory, "correcao-questionarios.csv"), delim=";", col_types=correcaoColSpec);
cat("\014")
rm(list = ls());
library(tidyverse);
library(ggplot2);
library(gridExtra);
library(finalfit);
library(kableExtra);
setwd("/Users/User/Desktop/Codigos/pattern-matching")
#setwd("~/Mestrado/tese/pattern-matching")
#
# Configuracao
#
baseDirectory <- "data/";
# ============================================================
#
# CARGA DOS DADOS
#
# ============================================================
#
# Carga das correcoes
#
correcaoColSpec <- cols(
Participante = col_character(),
ExpProg = col_character(),
ExpNET = col_character(),
Form = col_character(),
Q1 = col_double(),
Q2 = col_double(),
Q3 = col_double(),
Q4 = col_double(),
Q5 = col_double(),
Q6 = col_double(),
Q7 = col_double(),
Q8 = col_double()
)
correcao <- read_delim(paste0(baseDirectory, "correcao-questionarios.csv"), delim=";", col_types=correcaoColSpec);
#
# Carga das composicoes dos formularios
#
composicaoColSpec <- cols(
Form = col_character(),
Q1 = col_character(),
Q2 = col_character(),
Q3 = col_character(),
Q4 = col_character(),
Q5 = col_character(),
Q6 = col_character(),
Q7 = col_character(),
Q8 = col_character()
)
composicao <- read_delim(paste0(baseDirectory, "composicao-questionarios.csv"), delim=";", col_types=composicaoColSpec);
#
#
#
experiencia <- c("Menos que 1 ano" = "< 1 ano",
"Mais que 1 ano e menor que 3 anos" = "1-3 anos",
"Mais que 3 anos e menor que 5 anos" = "3-5 anos",
"Mais que 5 anos" = "5+ anos")
composicao
composicao <- composicao %>%
gather(Questao, Tipo, -Form);
composicao
correcao
cat("\014")
rm(list = ls());
library(tidyverse);
library(ggplot2);
library(gridExtra);
library(finalfit);
library(kableExtra);
setwd("/Users/User/Desktop/Codigos/pattern-matching")
#setwd("~/Mestrado/tese/pattern-matching")
#
# Configuracao
#
baseDirectory <- "data/";
# ============================================================
#
# CARGA DOS DADOS
#
# ============================================================
#
# Carga das correcoes
#
correcaoColSpec <- cols(
Participante = col_character(),
ExpProg = col_character(),
ExpNET = col_character(),
Form = col_character(),
Q1 = col_double(),
Q2 = col_double(),
Q3 = col_double(),
Q4 = col_double(),
Q5 = col_double(),
Q6 = col_double(),
Q7 = col_double(),
Q8 = col_double()
)
correcao <- read_delim(paste0(baseDirectory, "correcao-questionarios.csv"), delim=";", col_types=correcaoColSpec);
#
# Carga das composicoes dos formularios
#
composicaoColSpec <- cols(
Form = col_character(),
Q1 = col_character(),
Q2 = col_character(),
Q3 = col_character(),
Q4 = col_character(),
Q5 = col_character(),
Q6 = col_character(),
Q7 = col_character(),
Q8 = col_character()
)
composicao <- read_delim(paste0(baseDirectory, "composicao-questionarios.csv"), delim=";", col_types=composicaoColSpec);
correcao
correcao <- correcao %>%
mutate(ExpProg = recode(ExpProg, !!!experiencia)) %>%
mutate(ExpNET = recode(ExpNET, !!!experiencia)) %>%
gather(Questao, Acerto, -Participante, -ExpNET, -ExpProg, -Form) %>%
inner_join(composicao, by=c("Form"="Form", "Questao"="Questao"))
#
#
#
experiencia <- c("Menos que 1 ano" = "< 1 ano",
"Mais que 1 ano e menor que 3 anos" = "1-3 anos",
"Mais que 3 anos e menor que 5 anos" = "3-5 anos",
"Mais que 5 anos" = "5+ anos")
cat("\014")
rm(list = ls());
library(tidyverse);
library(ggplot2);
library(gridExtra);
library(finalfit);
library(kableExtra);
setwd("/Users/User/Desktop/Codigos/pattern-matching")
#setwd("~/Mestrado/tese/pattern-matching")
#
# Configuracao
#
baseDirectory <- "data/";
# ============================================================
#
# CARGA DOS DADOS
#
# ============================================================
#
# Carga das correcoes
#
correcaoColSpec <- cols(
Participante = col_character(),
ExpProg = col_character(),
ExpNET = col_character(),
Form = col_character(),
Q1 = col_double(),
Q2 = col_double(),
Q3 = col_double(),
Q4 = col_double(),
Q5 = col_double(),
Q6 = col_double(),
Q7 = col_double(),
Q8 = col_double()
)
correcao <- read_delim(paste0(baseDirectory, "correcao-questionarios.csv"), delim=";", col_types=correcaoColSpec);
#
# Carga das composicoes dos formularios
#
composicaoColSpec <- cols(
Form = col_character(),
Q1 = col_character(),
Q2 = col_character(),
Q3 = col_character(),
Q4 = col_character(),
Q5 = col_character(),
Q6 = col_character(),
Q7 = col_character(),
Q8 = col_character()
)
composicao <- read_delim(paste0(baseDirectory, "composicao-questionarios.csv"), delim=";", col_types=composicaoColSpec);
#
#
#
experiencia <- c("Menos que 1 ano" = "< 1 ano",
"Mais que 1 ano e menor que 3 anos" = "1-3 anos",
"Mais que 3 anos e menor que 5 anos" = "3-5 anos",
"Mais que 5 anos" = "5+ anos")
composicao <- composicao %>%
gather(Questao, Tipo, -Form);
correcao <- correcao %>%
mutate(ExpProg = recode(ExpProg, !!!experiencia)) %>%
mutate(ExpNET = recode(ExpNET, !!!experiencia)) %>%
gather(Questao, Acerto, -Participante, -ExpNET, -ExpProg, -Form) %>%
inner_join(composicao, by=c("Form"="Form", "Questao"="Questao"))
correcao
#
# Questoes por tipo - equilibrado, 216 por quest√£o.
#
correcao %>%
group_by(Tipo) %>%
summarise(Acertos = n());
#
# Nota por participante - maior parte entre 6 e 8
#
notaParticipante <- correcao %>%
group_by(Participante, ExpProg, ExpNET) %>%
summarise(Nota = sum(Acerto));
ggplot(notaParticipante, aes(Nota)) +
geom_histogram();
notaParticipante
#
# Nota por participante - maior parte entre 6 e 8
#
notaParticipante <- correcao %>%
group_by(Participante, ExpProg, ExpNET) %>%
summarise(Nota = sum(Acerto));
ggplot(notaParticipante, aes(Nota)) +
geom_histogram();
ggplot(notaParticipante, aes(Nota)) +
geom_histogram(binwidth = 1);
#
# Caracterizacao: A maioria dos participantes √© experiente em programa√ß√£o (39 dos 54 participantes t√™m 5+ anos de experi√™ncia)
#
notaParticipante %>%
group_by(ExpProg) %>%
summarise(n = n());
54*8
54*8/2
#
# Caracterizacao: A maioria dos participantes √© experiente em programa√ß√£o (39 dos 54 participantes t√™m 5+ anos de experi√™ncia)
#
notaParticipante %>%
group_by(ExpProg) %>%
summarise(n = n());
#
# Caracterizacao: Boa distribui√ß√£o de experi√™ncia com .NET
#
notaParticipante %>%
group_by(ExpNET) %>%
summarise(n = n());
#
# Juntando o menor grupo (4 pessoas) e recalculando as notas
#
correcao <- correcao %>%
mutate(ExpNET = if_else(ExpNET == "1-3 anos", "1-5 anos", ExpNET)) %>%
mutate(ExpNET = if_else(ExpNET == "3-5 anos", "1-5 anos", ExpNET));
notaParticipante <- correcao %>%
group_by(Participante, ExpProg, ExpNET) %>%
summarise(Nota = sum(Acerto));
#
# Juntando o menor grupo (4 pessoas) e recalculando as notas
#
correcao <- correcao %>%
mutate(ExpNET = if_else(ExpNET == "1-3 anos", "1-5 anos", ExpNET)) %>%
mutate(ExpNET = if_else(ExpNET == "3-5 anos", "1-5 anos", ExpNET));
notaParticipante <- correcao %>%
group_by(Participante, ExpProg, ExpNET) %>%
summarise(Nota = sum(Acerto), .groups = 'drop');
#
# Caracterizacao: Boa distribui√ß√£o de experi√™ncia com .NET
#
notaParticipante %>%
group_by(ExpNET) %>%
summarise(n = n());
#
# Caracterizacao: A maioria dos participantes √© experiente em programa√ß√£o (39 dos 54 participantes t√™m 5+ anos de experi√™ncia)
#
notaParticipante %>%
group_by(ExpProg) %>%
summarise(n = n());
notaParticipante <- correcao %>%
group_by(Participante, ExpProg, ExpNET) %>%
summarise(Nota = sum(Acerto), .groups = 'drop');
#
# Nota m√©dia por n√≠vel de experi√™ncia de programa√ß√£o - mais junior, nota mais baixa (diferen√ßa n√£o significativa)
#
notaMediaExpProg <- notaParticipante %>%
group_by(ExpProg) %>%
summarise(Nota = round(mean(Nota),2));
pairwise.wilcox.test(notaParticipante$Nota, notaParticipante$ExpProg, p.adj = "bonf");
#
# Nota m√©dia por n√≠vel de experi√™ncia em .NET - mais junior, nota mais baixa (diferen√ßa n√£o significativa)
#
notaMediaExpNET <- notaParticipante %>%
group_by(ExpNET) %>%
summarise(Nota = round(mean(Nota),2));
pairwise.wilcox.test(notaParticipante$Nota, notaParticipante$ExpNET, p.adj = "bonf");
notaMediaExpNET %>%
kbl(col.names = c("Experi√™ncia", "Nota"), booktabs = TRUE ,format = 'html' ,table.attr = "style='width:450px;height:450px'") %>%
kable_styling(latex_options = "striped", full_width = T) %>%
column_spec(1, width = "6cm") %>%
kable_classic(full_width = F);
#
# Acertos por tipo - 192 pattern matching, 179 condicionais
#
acertosTipo <- correcao %>%
group_by(Tipo) %>%
summarise(Acertos = sum(Acerto));
#
# Acertos por formulario - pattern matching vence em 3 de 4 casos (diferen√ßa n√£o significativa)
#
acertosFormTipo <- correcao %>%
group_by(Form, Tipo) %>%
summarise(Acertos = sum(Acerto)) %>%
spread(Tipo, Acertos);
#
# Acertos por formulario - pattern matching vence em 3 de 4 casos (diferen√ßa n√£o significativa)
#
acertosFormTipo <- correcao %>%
group_by(Form, Tipo) %>%
summarise(Acertos = sum(Acerto), .groups = 'drop') %>%
spread(Tipo, Acertos);
mxAcertosFormTipo <- matrix(as.numeric(as.matrix(acertosFormTipo)[,2:3]), ncol=4, byrow=TRUE);
chisq.test(mxAcertosFormTipo);
#
# Acertos por experi√™ncia em programa√ß√£o - pattern matching vence em 2 de 3 casos, com 1 empate (sem diferen√ßa significativa)
#
acertosExpProgTipo <- correcao %>%
group_by(ExpProg, Tipo) %>%
summarise(Acertos = sum(Acerto)) %>%
spread(Tipo, Acertos);
mxAcertosExpProgTipo <- matrix(as.numeric(as.matrix(acertosExpProgTipo)[,2:3]), ncol=3, byrow=TRUE);
chisq.test(mxAcertosExpProgTipo);
#
# Acertos por experi√™ncia em .NET - pattern matching vence em 2 de 3 casos, com 1 empate (sem diferen√ßa significativa)
#
acertosExpNETTipo <- correcao %>%
group_by(ExpNET, Tipo) %>%
summarise(Acertos = sum(Acerto)) %>%
spread(Tipo, Acertos);
mxAcertosExpNETTipo <- matrix(as.numeric(as.matrix(acertosExpNETTipo)[,2:3]), ncol=3, byrow=TRUE);
chisq.test(mxAcertosExpNETTipo);
#
# Nota por participante - maior parte entre 6 e 8
#
notaParticipante <- correcao %>%
group_by(Participante, ExpProg, ExpNET) %>%
summarise(Nota = sum(Acerto));
ggplot(notaParticipante, aes(Nota)) +
geom_histogram(binwidth = 1);
#
# Caracterizacao: A maioria dos participantes √© experiente em programa√ß√£o (39 dos 54 participantes t√™m 5+ anos de experi√™ncia)
#
notaParticipante %>%
group_by(ExpProg) %>%
summarise(n = n());
